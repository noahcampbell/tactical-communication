#!/usr/bin/env python

import sys
from optparse import OptionParser

ALPHABET = "ZU1eOAjR3bpzFtGXYaSN82rlLQMV7D6uwiPIochd5sf4H9xkCEBnTKmqyWv0gJ"

def base62_encode(num, alphabet=ALPHABET):
    """Encode a number in Base X

    `num`: The number to encode
    `alphabet`: The alphabet to use for encoding
    """
    if (num == 0):
        return alphabet[0]
    arr = []
    base = len(alphabet)
    while num:
        rem = num % base
        num = num // base
        arr.append(alphabet[rem])
    arr.reverse()
    return ''.join(arr)

def base62_decode(string, alphabet=ALPHABET):
    """Decode a Base X encoded string into the number

    Arguments:
    - `string`: The encoded string
    - `alphabet`: The alphabet to use for encoding
    """
    base = len(alphabet)
    strlen = len(string)
    num = 0

    idx = 0
    for char in string:
        power = (strlen - (idx + 1))
        num += alphabet.index(char) * (base ** power)
        idx += 1

    return num

if __name__ == '__main__':
	parser = OptionParser()
	parser.add_option("-d", dest='decode', action='store_true', default=False, help="Decode the base62 encoded string.")
	
	(options, args) = parser.parse_args()	
	if options.decode:
		print base62_decode(args[0])
	else:
		print base62_encode(int(args[0]))
